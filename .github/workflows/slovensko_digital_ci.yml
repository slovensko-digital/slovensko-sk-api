name: Slovensko.Digital CI

on:
  push:
    branches: '**'
    tags: '*'

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      PGHOST: localhost
      RAILS_ENV: test

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:5-alpine
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'
      - uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{hashFiles('lib/upvs/pom.xml')}}
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - run: mvn -f lib/upvs package
      - run: bundle exec rails db:create db:schema:load --trace
      - run: bundle exec dotenv -f .env.test rspec
      - run: bundle exec dotenv -f .env.test.with_upvs_sso rspec

  build:
    needs: test
    if: startsWith(github.ref, 'refs/tags/')

    runs-on: ubuntu-latest

    permissions: write-all

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Run slovensko-digital/docker-image-tags@v1
        run: |
          head=$(git describe --tags --exact-match ${{github.event.head_commit.id}})
          latest=$(git tag --sort=-v:refname | grep -Fv - | head -n 1)
          base=ghcr.io/${{github.repository}}
          tags=$base:${head:1}$(if [[ $head == $latest ]]; then echo ",$base:latest"; fi)
          echo "tags=$tags" >> $GITHUB_ENV
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - uses: docker/build-push-action@v4
        with:
          push: true
          platforms: linux/amd64
          tags: ${{env.tags}}

  gitlab-push:
    needs: test
    if: startsWith(github.ref, 'refs/tags/')

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: dokku/github-action@master
        with:
          git_push_flags: '--force'
          git_remote_url: ssh://git@${{secrets.GITLAB_DEPLOY_HOST}}/${{github.event.repository.name}}.git
          ssh_private_key: ${{secrets.GITLAB_DEPLOY_KEY}}
