openapi: 3.0.0

info:
  version: 0.0.2
  title: PodaaS
  description: |
    PodaaS je proxy API komponent vystavujúci cez REST API služby www.slovensko.sk (ústredný portál verejnej správy - ÚPVS), pomocou ktorých je možné:

    - uskutočniť prihlásenie pomocou ÚPVS (pomocou elektronického občianskeho preukazu) a získať údaje o prihlásenom subjekte,
    - podávať podania v mene subjektu, ktorý sa prihlásil cez ÚPVS,
    - validovať či je uřcitá správa vo formáte SKTalk validná voči aktuálnej definícii formuláru (podporná funkcia).
  contact:
    name: Slovensko.Digital
    url: https://slovensko.digital/
    email: kontakt@slovensko.digital

  license:
    name: "European Union Public License 1.2"
    url: "https://opensource.org/licenses/EUPL-1.2"

servers:
- description: Server v ÚPVS PROD prostredí
  url: https://podaas.ekosystem.slovensko.digital

- description: Server v ÚPVS FIX prostredí
  url: https://podaas.ekosystem.staging.slovensko.digital

paths:
  /login:
    get:
      tags: [Prihlasovanie pomocou eID]
      description: Prihlásenie pomocou slovensko.sk (ÚPVS). Po úspešnom prihlásení nasleduje presmerovanie späť na callback URL tretej strany. V parametri `token` bude zaslaný OBO (On-Behalf-Of) token využiteľný na získanie údajov o prihlásenom subjekte alebo volanie ďaľších rozhraní v mene prihláseného subjektu.
      parameters:
      - name: callback
        in: query
        description: Callback URL, ktorá sa má zavolať po úspešnom prihlásení.
        schema:
          type: string
          format: URL
      responses:
        302:
          description: Presmerovanie na prihlasovaciu stránku ÚPVS.
        400:
          $ref: '#/components/responses/badRequest'
        500:
          $ref: '#/components/responses/internalServerError'
      callbacks:
        login:
          '{$request.query.callback}':
            get:
              parameters:
              - name: token
                in: query
                required: true
                description: |
                  OBO token v JWT formáte, ktorého payload vyzerá nasledovne:

                      {
                        "sub": "rc://sk/8311577984_tisici_janko",
                        "exp": 1545147549,
                        "nbf": 1545146349,
                        "iat": 1545146349,
                        "jti": "ad8e5d2a-85ff-46b9-a13f-ac860db9acee",
                        "name": "Janko Tisíci",
                        "scopes": [
                          "sktalk/receive",
                          "sktalk/receive_and_save_to_outbox"
                        ]
                      }
                schema:
                  type: string
                  format: JWT
              responses:
                200:
                  description: Úspešné prihlásenie.

  /logout:
    get:
      tags: [Prihlasovanie pomocou eID]
      description: Odhlásenie z ÚPVS portálu. Po úspešnom odhlásení nasleduje presmerovanie späť na callback URL tretej strany.
      parameters:
      - name: callback
        in: query
        description: Odhlasovacia callback URL.
        schema:
          type: string
          format: URL
      responses:
        302:
          description: Presmerovanie na callback URL tretej strany.
        400:
          $ref: '#/components/responses/badRequest'
        401:
          $ref: '#/components/responses/unauthorized'
        500:
          $ref: '#/components/responses/internalServerError'
      callbacks:
        logout:
          '{$request.query.callback}':
            get:
              responses:
                200:
                  description: Úspešné odhlásenie.
      security:
      - 'API + OBO token': []

  /api/sktalk/receive_and_save_to_outbox:
    post:
      tags: [Zasielanie podaní]
      description: Odošle SKTalk správu a uloží ju medzi odoslané správy v schránke.
      parameters:
      - name: message
        in: query
        required: true
        description: 'SKTalk správa vo formáte XML, napríklad `<SKTalkMessage>...</SKTalkMessage>`'
        schema:
          type: string
          format: XML
      responses:
        200:
          description: SKTalk správa bola odoslaná a uložená medzi odoslané správy v schránke.
          content:
            application/json:
              schema:
                type: object
                properties:
                  receive_result:
                    type: integer
                  save_to_outbox_result:
                    type: integer
                required:
                - receive_result
                - save_to_outbox_result
                example:
                  receive_result: 0
                  save_to_outbox_result: 0
        400:
          $ref: '#/components/responses/badRequest'
        401:
          $ref: '#/components/responses/unauthorized'
        408:
          $ref: '#/components/responses/requestTimeout'
        413:
          $ref: '#/components/responses/payloadTooLarge'
        429:
          $ref: '#/components/responses/tooManyRequests'
        500:
          $ref: '#/components/responses/internalServerError'
      security:
      - 'API + OBO token': []

  /api/sktalk/receive:
    post:
      tags: [Zasielanie podaní]
      description: Odošle SKTalk správu.
      parameters:
      - name: Authorization
        in: header
        required: true
        description: 'API token vo formáte JWT, príklad parametra `Authorization: Bearer <api-token>`'
        schema:
          type: string
          format: JWT
      - name: token
        in: query
        required: false
        deprecated: true
        description: 'API token vo formáte JWT, príklad parametra `?token=<api-token>`'
        schema:
          type: string
          format: JWT
      - name: message
        in: query
        required: true
        description: 'SKTalk správa vo formáte XML, napríklad `<SKTalkMessage>...</SKTalkMessage>`'
        schema:
          type: string
          format: XML
      responses:
        200:
          description: SKTalk bola správa prijatá.
          content:
            application/json:
              schema:
                type: object
                properties:
                  receive_result:
                    type: integer
                required:
                - receive_result
                example:
                  receive_result: 0
        400:
          $ref: '#/components/responses/badRequest'
        401:
          $ref: '#/components/responses/unauthorized'
        408:
          $ref: '#/components/responses/requestTimeout'
        413:
          $ref: '#/components/responses/payloadTooLarge'
        429:
          $ref: '#/components/responses/tooManyRequests'
        500:
          $ref: '#/components/responses/internalServerError'
      security:
      - 'API + OBO token': []

  /api/eform/validate:
    post:
      tags: [Zasielanie podaní]
      description: Zvaliduje eForm dáta voči definícii formuláru.
      parameters:
      - name: identifier
        in: query
        required: true
        description: 'Identifikátor formuláru, napríklad `App.GeneralAgenda`'
        schema:
          type: string
      - name: version
        in: query
        required: true
        description: 'Verzia formuláru, napríklad `1.9`'
        schema:
          type: string
          format: JWT
      - name: data
        in: query
        required: true
        description: 'Dáta formuláru, napríklad `<GeneralAgenda>...</GeneralAgenda>`'
        schema:
          type: string
          format: XML
      responses:
        200:
          description: eForm dáta boli úspešne validované voči definícii formuláru.
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - valid
                example:
                  valid: true
        400:
          $ref: '#/components/responses/badRequest'
        401:
          $ref: '#/components/responses/unauthorized'
        408:
          $ref: '#/components/responses/requestTimeout'
        413:
          $ref: '#/components/responses/payloadTooLarge'
        429:
          $ref: '#/components/responses/tooManyRequests'
        500:
          $ref: '#/components/responses/internalServerError'
      security:
      - 'API token': []

components:
  responses:
    badRequest:
      description: Parametre chýbajú alebo sú nesprávne.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: No credentials

    unauthorized:
      description: Autentifikácia zlyhala.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: Bad credentials
      headers:
        WWW-Authenticate:
          schema:
            type: string
            example: Token realm="PODAAS"

    requestTimeout:
      description: Operácia vypršala.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: Operation timeout exceeded

    payloadTooLarge:
      description: Príliš veľký objem dát v požiadavke na server.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: Payload size limit exceeded

    tooManyRequests:
      description: Príliš veľa požiadaviek na server v danom čase.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: Request rate limit exceeded

    internalServerError:
      description: Neznáma chyba.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
            - message
            example:
              message: Unknown error

  securitySchemes:
    'API token':
      description: |
        Požaduje API token vytvorený treťou stranou, ktorý:

        - je zakodovaný algoritmom RS256,
        - je podpísaný privátnym kľúčom tretej strany,
        - má nastavený `exp` claim na max. 60 minút,
        - má nastavený `jti` claim na identifikátor, ktorý je unikátny počas 60 minút.

        Príklad headers:

              {
                "alg": "HS256",
              }

        Príklad payload:

              {
                "exp": 1543437976,
                "jti": "4dee8618-abbe-4dc3-83ba-e984d1396f9f",
              }

        API token musí byť prítomný buď v `Authorization` hlavičke alebo v `token` parametri požiadavky.
      type: http
      scheme: bearer
      bearerFormat: JWT

    'API + OBO token':
      description: |
        Požaduje API token vytvorený treťou stranou, ktorý:

        - je zakodovaný algoritmom RS256,
        - je podpísaný privátnym kľúčom tretej strany,
        - má nastavenú `cty` header na hodnotu `JWT`,
        - má nastavený `exp` claim na `exp` atribút OBO tokenu,
        - má nastavený `jti` claim na identifikátor, ktorý je unikátny počas 60 minút,
        - má nastavený `obo` claim na hodnotu OBO tokenu, ktorý je získaný po úspešnom prihlásení.

        Príklad headers:

              {
                "alg": "HS256",
                "cty": "JWT"
              }

        Príklad payload:

              {
                "exp": 1543437976,
                "jti": "4dee8618-abbe-4dc3-83ba-e984d1396f9f",
                "obo": "eyJhbGciOiJIUzI1NiJ9..."
              }

        API token musí byť prítomný buď v `Authorization` hlavičke alebo v `token` parametri požiadavky.
      type: http
      scheme: bearer
      bearerFormat: JWT
